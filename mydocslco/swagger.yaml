openapi: "3.0.0"
info: 
  title: learn express and swagger
  description: A segment about writing docs
  version: 1.1.0
  contact:
    email: ayushkumar1234@protonmail.com
    url: "https://socialapp-ayush.herokuapp.com/api-docs/"


# servers:
#   - url: "https://localhost:4000/api/v1"
#     description: for local host - secure
#   - url: "http://localhost:4000/api/v1"
#     description: for local host - regular

servers:
  - url: "{protocol}://localhost:4000/api/{version}"
    description: for local host 
    variables:
      protocol: 
        enum:
          - http
          - https 
        default: http
      version: 
        enum:
          - v1
          - v2
        default: v1
      


components:
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: token
    BearerAuth:
      type: http
      scheme: bearer


paths:
  /docs:
    get:
      tags:
        - Strings
      summary: returns a greet message from us.
      responses:
        200:
          description: All good success
          content:
            application/json:
              schema:
                type: string
                example: "mystring"
        400:
          description: bad request
        500:
          description: internal server error
  /docobject:
    get:
      tags:
        - Objects
      summary: returns an unique course.
      responses:
        200:
          description: All good success
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                  rating:
                    type: number
                    format : float
        400:
          description: bad request
        500:
          description: internal server error
  /courses:
    get:
      tags:
        - Array
      summary: returns all courses available.
      responses:
        200:
          description: All good success
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
                    price:
                      type: number
                      format : float
        400:
          description: bad request
        500:
          description: internal server error
  /mycourses/{courseId}:
    get:
      tags:
        - Array Object
      summary: returns course based on request id.
      parameters:
        - name: courseId
          in: path
          required: true
          default: 22
          schema: 
            type: string
      responses:
        200:
          description: All good success
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  name:
                    type: string
                  price:
                    type: number
                    format : float
        400:
          description: bad request
        500:
          description: internal server error
  /addCourse:
    post:
      tags:
        - Array Object
      summary: add a new course to existing courses.
      consumes:
        - application/json
      produces:
        - application/json
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                name:
                  type: string
                price:
                  type: number
                  format : float
      responses:
        200:
          description: All good success
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  name:
                    type: string
                  price:
                    type: number
                    format : float
        400:
          description: bad request
        500:
          description: internal server error